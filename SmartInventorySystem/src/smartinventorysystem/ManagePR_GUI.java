package purchaseordermanagementsystem;

import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class ManagePR_GUI extends javax.swing.JFrame {

    private Administrator admin;
    private SaleManager saleManager;
    private PurchaseManager purchaseManager;
    private String[] statusSelection = {"All","Pending","Approved","Rejected"};
    
    public ManagePR_GUI(SaleManager saleManager) {
        this.saleManager=saleManager;
        setTitle("Sale Manager - Manage Purchase Requisition");
        initComponents();
        setLocationRelativeTo(null);
        displayTable();
    }
    
    public ManagePR_GUI(PurchaseManager purchaseManager){
        this.purchaseManager = purchaseManager;
        setTitle("Purchase Manager - View Purchase Requisition");
        initComponents();                
        setLocationRelativeTo(null);
        displayTable();
        
        managePRLabel.setText( "View Purchase Requisition");
        editButton.setText( "View Item in PR");
        addButton.setVisible(false);
        removeButton.setVisible(false);
    }
    
    public ManagePR_GUI(Administrator admin){
        this.admin = admin;
        setTitle("Administrator - View Purchase Requisition");
        initComponents();                
        setLocationRelativeTo(null);
        displayTable();
        
        managePRLabel.setText( "View Purchase Requisition");
        editButton.setText( "View Item in PR");
        addButton.setVisible(false);
        removeButton.setVisible(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchText = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        PRTable = new javax.swing.JTable();
        statusComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        BackButton = new javax.swing.JButton();
        managePRLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        PRTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PR ID", "SM ID", "Supplier ID", "Request Date", "Grand Total Price", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(PRTable);

        statusComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Pending", "Approved", "Rejected" }));

        jLabel1.setFont(new java.awt.Font("Bodoni MT", 0, 16)); // NOI18N
        jLabel1.setText("Status");

        jLabel2.setFont(new java.awt.Font("Bodoni MT", 0, 16)); // NOI18N
        jLabel2.setText("Find");

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        BackButton.setText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        managePRLabel.setFont(new java.awt.Font("Bodoni MT", 1, 24)); // NOI18N
        managePRLabel.setText("Manage Purchase Requisition");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(BackButton)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(506, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(managePRLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 682, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
            .addGroup(layout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(statusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(searchButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addButton)
                .addGap(26, 26, 26)
                .addComponent(editButton)
                .addGap(27, 27, 27)
                .addComponent(removeButton)
                .addGap(92, 92, 92))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(BackButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(managePRLabel)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(editButton)
                                        .addComponent(removeButton))
                                    .addComponent(addButton)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(statusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(searchButton))))))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        AddPR_GUI addPRGUI = new AddPR_GUI(saleManager);
        addPRGUI.show();
        dispose();
        
    }//GEN-LAST:event_addButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        
        String filterTarget = statusSelection[statusComboBox.getSelectedIndex()];
        String searchTarget = searchText.getText();
        // All
        if (searchTarget.isBlank() && filterTarget.equals("All")){
            removeTableRow();
            displayTable();
        }
        // only filter
        else if(searchTarget.isBlank() && statusComboBox.getSelectedIndex()!=0){
            FileManager filterStatus = new FileManager("Purchase_Requisition.txt");
            ArrayList<String[]> statusPR = filterStatus.filterData(5, filterTarget);
            removeTableRow();
            displayTable(statusPR);  
        }
        // search & filter
        else if(searchText != null && statusComboBox.getSelectedIndex()!=0){
            
            FileManager searchPR = new FileManager("Purchase_Requisition.txt");
            ArrayList<String[]> PRList = searchPR.searchData(searchTarget);
            ArrayList<String[]> statusPR = searchPR.filterData(5, filterTarget);
            
            ArrayList<String[]> PR_StatusArray = new ArrayList<String[]>();
            for(int i = 0; i<PRList.size();i++){
                String[] arrayData = PRList.get(i);
                for(int j = 0; j<statusPR.size();j++){
                    String[] statusData = statusPR.get(j);
                    if(Arrays.equals(arrayData,statusData) == true){
                        PR_StatusArray.add(statusData);  
                    }
                }
            }
            removeTableRow();
            displayTable(PR_StatusArray);
        }      
        // only search
        else{
            FileManager searchPR = new FileManager("Purchase_Requisition.txt");
            ArrayList<String[]> PRList = searchPR.searchData(searchTarget);
            removeTableRow();
            displayTable(PRList); 
        }
        
    }//GEN-LAST:event_searchButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) PRTable.getModel();
        int selectedRowIndex = PRTable.getSelectedRow();
        String SelectedPRID = model.getValueAt(selectedRowIndex, 0).toString();
        
        if (admin == null && saleManager != null && purchaseManager == null){

            PurchaseRequisition PR = saleManager.checkPRInfo(SelectedPRID);
            if(PR.getPurchaseRequisitionStatus().equals("Pending")){
                EditPR_GUI editPRGUI = new EditPR_GUI(saleManager,PR);
                editPRGUI.show();
                dispose();
            }
            else{
                JOptionPane.showMessageDialog(null,"Approved and Rejected PR cannot be edit");
            }
        }
        else if(admin != null && saleManager == null && purchaseManager == null){
 
            PurchaseRequisition PR = admin.checkPRInfo(SelectedPRID);

            EditPR_GUI editPRGUI = new EditPR_GUI(admin,PR);
            editPRGUI.show();
            dispose();

        }
        else if(admin == null && saleManager == null && purchaseManager != null){
 
            PurchaseRequisition PR = purchaseManager.checkPRInfo(SelectedPRID);

            EditPR_GUI editPRGUI = new EditPR_GUI(purchaseManager,PR);
            editPRGUI.show();
            dispose();
        }
    }//GEN-LAST:event_editButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        if(PRTable.getSelectedRow()!=-1){
            DefaultTableModel model = (DefaultTableModel) PRTable.getModel();
            int selectedRowIndex = PRTable.getSelectedRow();
            String SelectedPRID = model.getValueAt(selectedRowIndex, 0).toString();
            PurchaseRequisition PR = saleManager.checkPRInfo(SelectedPRID);
            if(PR.getPurchaseRequisitionStatus().equals("Pending")){
                RemovePR_GUI removePRGUI = new RemovePR_GUI(saleManager,PR);
                removePRGUI.show();
                dispose();   
            }
            else{
                JOptionPane.showMessageDialog(null,"Approved and Rejected PR cannot be removed");
            } 
        }
    }//GEN-LAST:event_removeButtonActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        if (admin != null && saleManager == null && purchaseManager == null){
            Admin_GUI adminGUI = new Admin_GUI(admin);
            adminGUI.show();
            dispose();
        }
        else if (admin == null && saleManager != null && purchaseManager == null){
            SaleManager_GUI saleManagerGUI = new SaleManager_GUI(saleManager);
            saleManagerGUI.show();
            dispose();
        }
        else if (admin == null && saleManager == null && purchaseManager != null){
            PurchaseManager_GUI purchaseManagerGUI = new PurchaseManager_GUI(purchaseManager);
            purchaseManagerGUI.show();
            dispose();
        }
    }//GEN-LAST:event_BackButtonActionPerformed

    public void displayTable(){
        DefaultTableModel model = (DefaultTableModel) PRTable.getModel();
        FileManager getrow = new FileManager("Purchase_Requisition.txt");
        ArrayList<String> rows =  getrow.readFile();
        for(int i=0 ; i< rows.size();i++){
            String line = rows.get(i).toString();
            String[] data = line.split("\\|");
            String[] selectedData = Arrays.copyOf(data, 6);
            model.addRow(selectedData);
        }
        
    }
    
    public void displayTable(ArrayList<String[]> PRData){
        DefaultTableModel model = (DefaultTableModel) PRTable.getModel();
        for(int i =0;i<PRData.size();i++){
            String[] selectedData = Arrays.copyOf(PRData.get(i), 6);
            model.addRow(selectedData);
        }
    }    
    
    public void removeTableRow(){
        DefaultTableModel model = (DefaultTableModel) PRTable.getModel();
        int count = model.getRowCount();
        for (int i = count - 1; i >= 0; i--) {
            model.removeRow(i);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManagePR_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManagePR_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManagePR_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManagePR_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new ManagePR_GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JTable PRTable;
    private javax.swing.JButton addButton;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel managePRLabel;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchText;
    private javax.swing.JComboBox<String> statusComboBox;
    // End of variables declaration//GEN-END:variables
}
