package purchaseordermanagementsystem;

import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class AddPO_GUI extends javax.swing.JFrame {
    private PurchaseManager purchaseManager;

    public AddPO_GUI(PurchaseManager purchaseManager) {
        this.purchaseManager=purchaseManager;
        initComponents();
        setLocationRelativeTo(null);
        displayPRTable();
        displayPOTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        POTable = new javax.swing.JTable();
        approveButton = new javax.swing.JButton();
        viewPRItemButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        rejectButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        PRTable = new javax.swing.JTable();
        deletePOButton = new javax.swing.JButton();
        orderDateText = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        jScrollPane3.setViewportView(jTree1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Purchase Manager - Add Purchase Order");

        POTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PO ID", "PR ID", "Supplier ID", "Approve Date", "Grand Total Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(POTable);

        approveButton.setFont(new java.awt.Font("Bodoni MT", 0, 15)); // NOI18N
        approveButton.setText("Approve");
        approveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveButtonActionPerformed(evt);
            }
        });

        viewPRItemButton.setFont(new java.awt.Font("Bodoni MT", 0, 15)); // NOI18N
        viewPRItemButton.setText("View Item in PR");
        viewPRItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewPRItemButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Bodoni MT", 1, 18)); // NOI18N
        jLabel1.setText("Manipulate Purchase Order");

        backButton.setFont(new java.awt.Font("Bodoni MT", 0, 15)); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        rejectButton.setFont(new java.awt.Font("Bodoni MT", 0, 15)); // NOI18N
        rejectButton.setText("Reject");
        rejectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Bodoni MT", 0, 15)); // NOI18N
        jLabel2.setText("Purchase Order: ");

        jLabel3.setFont(new java.awt.Font("Bodoni MT", 0, 15)); // NOI18N
        jLabel3.setText("Pending Purchase Requisition: ");

        PRTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PR ID", "SM ID", "Supplier ID", "Request Date", "Grand Total Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(PRTable);

        deletePOButton.setFont(new java.awt.Font("Bodoni MT", 0, 15)); // NOI18N
        deletePOButton.setText("Delete ");
        deletePOButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePOButtonActionPerformed(evt);
            }
        });

        orderDateText.setFont(new java.awt.Font("Bodoni MT", 0, 15)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Bodoni MT", 0, 15)); // NOI18N
        jLabel9.setText("Approve Date: ");

        jLabel10.setFont(new java.awt.Font("Bodoni MT", 0, 15)); // NOI18N
        jLabel10.setText("DD-MM-YYYY");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(viewPRItemButton)
                        .addGap(50, 50, 50)
                        .addComponent(approveButton)
                        .addGap(59, 59, 59)
                        .addComponent(rejectButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(backButton)
                                .addGap(29, 29, 29)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(orderDateText, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel10))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(242, 242, 242)
                                .addComponent(deletePOButton)))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(orderDateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(backButton)
                        .addComponent(jLabel1)))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(approveButton)
                        .addComponent(rejectButton))
                    .addComponent(deletePOButton)
                    .addComponent(viewPRItemButton))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void approveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveButtonActionPerformed
        if(orderDateText.getText().isBlank()){
            JOptionPane.showMessageDialog(null, "Please Enter Date");
        }
        else if(!orderDateText.getText().isBlank() && !InputValidation.isValidDate(orderDateText.getText()))
            JOptionPane.showMessageDialog(null, "Please Enter correct Date");
        else{
            DefaultTableModel model = (DefaultTableModel) PRTable.getModel();
            int selectedRowIndex = PRTable.getSelectedRow();
            String SelectedPRID = model.getValueAt(selectedRowIndex, 0).toString();
            PurchaseRequisition PR = purchaseManager.checkPRInfo(SelectedPRID);
            purchaseManager.changePRStatus(PR,"Approved");  
            
            String POID = purchaseManager.generatePOID();
            String orderDate = orderDateText.getText();
            
            PurchaseOrder PO = new PurchaseOrder(POID,PR,purchaseManager,orderDate);
            PO.addPurchaseOrder();
            
            removePRTableRow();
            removePOTableRow();
            
            displayPOTable();
            displayPRTable();    
        }
    }//GEN-LAST:event_approveButtonActionPerformed

    private void rejectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) PRTable.getModel();
        int selectedRowIndex = PRTable.getSelectedRow();
        String SelectedPRID = model.getValueAt(selectedRowIndex, 0).toString();
        PurchaseRequisition PR = purchaseManager.checkPRInfo(SelectedPRID);
        purchaseManager.changePRStatus(PR,"Rejected");    
        
        removePRTableRow();
        displayPRTable();
    }//GEN-LAST:event_rejectButtonActionPerformed

    private void viewPRItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewPRItemButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) PRTable.getModel();
        int selectedRowIndex = PRTable.getSelectedRow();
        String SelectedPRID = model.getValueAt(selectedRowIndex, 0).toString();
        PurchaseRequisition PR = purchaseManager.checkPRInfo(SelectedPRID);
        EditPR_GUI editPRGUI = new EditPR_GUI(purchaseManager,PR);
        editPRGUI.show();
        dispose();
    }//GEN-LAST:event_viewPRItemButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        PurchaseManager_GUI purchaseManagerGUI = new PurchaseManager_GUI(purchaseManager);
        purchaseManagerGUI.show();
        dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    private void deletePOButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePOButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) POTable.getModel();
        int selectedRowIndex = POTable.getSelectedRow();
        String SelectedPOID = model.getValueAt(selectedRowIndex, 0).toString();
        PurchaseOrder PO = purchaseManager.checkPOInfo(SelectedPOID);
        PO.removePurchaseOrder();
        removePOTableRow();
        displayPOTable();
    }//GEN-LAST:event_deletePOButtonActionPerformed
    
    public void displayPRTable(){
        DefaultTableModel model = (DefaultTableModel) PRTable.getModel();
        FileManager getrow = new FileManager("Purchase_Requisition.txt");
        ArrayList<String[]> PendingPR = getrow.searchData("Pending");
        for(int i =0;i<PendingPR.size();i++){
            String[] PendingPRData = Arrays.copyOf(PendingPR.get(i), 5);
            model.addRow(PendingPRData);
        }
    }
    public void displayPOTable(){
        DefaultTableModel model = (DefaultTableModel) POTable.getModel();
        FileManager getrow = new FileManager("Purchase_Order.txt");
        ArrayList<String> POline = getrow.readFile();
        for(int i =0;i<POline.size();i++){
            String[] POData = POline.get(i).split("\\|");
            PurchaseOrder PO = new PurchaseOrder(POData[0],POData[1],POData[2],POData[3]);
            String[] rowData = {PO.getPurchaseOrderID(),PO.getPurchaseRequisition().getPurchaseRequisitionID(),PO.getPurchaseRequisition().getSupplier().getSupplierID(),PO.getOrderDate(),Double.toString(PO.getPurchaseRequisition().getGrandTotalPrice())};
            model.addRow(rowData);
        }
    }

    public void removePRTableRow(){
        DefaultTableModel model = (DefaultTableModel) PRTable.getModel();
        int count = model.getRowCount();
        for (int i = count - 1; i >= 0; i--) {
            model.removeRow(i);
        }
    }
    
    public void removePOTableRow(){
        DefaultTableModel model = (DefaultTableModel) POTable.getModel();
        int count = model.getRowCount();
        for (int i = count - 1; i >= 0; i--) {
            model.removeRow(i);
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddPO_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddPO_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddPO_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddPO_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
            
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new AddPO_GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable POTable;
    private javax.swing.JTable PRTable;
    private javax.swing.JButton approveButton;
    private javax.swing.JButton backButton;
    private javax.swing.JButton deletePOButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTree jTree1;
    private javax.swing.JTextField orderDateText;
    private javax.swing.JButton rejectButton;
    private javax.swing.JButton viewPRItemButton;
    // End of variables declaration//GEN-END:variables
}
